@*@model System.Collections.IEnumerable

    @Html.Partial("EmployeePartialView", Model)*@
@model DevExpressDemo.Models.UserModel

@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();

    Action<MVCxFormLayoutItem> AuthorizationDataTextBoxSettingsMethod = item =>
    {
        item.NestedExtension().TextBox(s =>
        {
            s.Properties.Password = s.Name.Contains("Password");
            s.Properties.ValidationSettings.ErrorTextPosition=ErrorTextPosition.Bottom;
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.Text;
            s.Properties.ValidationSettings.Display=Display.Dynamic;
            s.ShowModelErrors = true;
        });
    };
}


@using (Html.BeginForm())
{
    @Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "User Login";
    settings.ColCount = 3;
    settings.AlignItemCaptionsInAllGroups = true;


    settings.Items.AddGroupItem(group =>
    {
        group.Caption = "User Information";
        group.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;
        group.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;

        

        group.ColSpan = 1;
        group.ColCount = 1;

        group.Items.Add(item => item.Caption = " ")
        .SetNestedContent("<span>If you have no account, you can " + @Html.ActionLink("register", "Register") + ".</span>");
        group.Items.AddEmptyItem().Height = 20;

        //group.Items.Add(item => item.UserName);
        //group.Items.Add(item => item.Password);

        group.Items
                .Add(m =>
                {
                    m.Caption = "Name";
                    m.CaptionSettings.AssociatedNestedExtensionName = "RegistrationData.FirstName";
                })
                .SetNestedContent(() =>
                {
                    ViewContext.Writer.Write("<table><tr><td style=\"padding-right:5px;\">");

                    Html.DevExpress().TextBoxFor(item => item.UserName, s =>
                    {
                        s.Width = 170;
                        s.ShowModelErrors = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.Text;
                        s.Properties.ValidationSettings.Display = Display.Dynamic;
                        s.Properties.ValidationSettings.ErrorText = "*";
                    }).Render();

                    ViewContext.Writer.Write("</td><td>");
                    ViewContext.Writer.Write("</td></tr></table>");
                });
        

        group.Items.Add(item => item.Password, AuthorizationDataTextBoxSettingsMethod);
        group.Items.Add(item => item.ConfirmPassword, AuthorizationDataTextBoxSettingsMethod);


        group.ShowCaption = DefaultBoolean.False;
        group.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;
        group.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Right;
        group.Items.Add(itemSettings => itemSettings.Caption = " ").SetNestedContent(() =>
        {
            Html.DevExpress().Captcha(captchaSettings =>
            {
                captchaSettings.Name = "captcha";
                captchaSettings.TextBox.Position = DevExpress.Web.Captcha.ControlPosition.Bottom;
                captchaSettings.TextBox.ShowLabel = false;
                captchaSettings.RefreshButton.Visible = false;
            }).Render();
        });

        group.Items.Add(item =>
        {
            item.Caption = " ";
            item.NestedExtension().Button(s =>
            {
                s.Name = "signIn";
                s.Text = "Sign In";
                s.UseSubmitBehavior = true;
                s.Width = Unit.Pixel(100);
            });
        });

    });

}).GetHtml()

    
    @*@Html.DevExpress().Button(settings =>
    {
        settings.Name = "Button";
        settings.Text = "Sign In";
        settings.UseSubmitBehavior = true;
        settings.Width = 100;

    }).GetHtml()*@
}