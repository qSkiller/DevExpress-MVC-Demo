@model DevExpressDemo.Models.UserModel

@{
    ViewBag.Title = "User SignIn ";
}

@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();

    Action<MVCxFormLayoutItem> AuthorizationDataTextBoxSettingsMethod = item =>
    {
        item.NestedExtension().TextBox(s =>
        {
            s.Properties.Password = s.Name.Contains("Password");
            s.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Right;
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.Text;
            s.Properties.ValidationSettings.Display = Display.Dynamic;
            s.ShowModelErrors = true;
        });
    };
}

@using (Html.BeginForm("LogIn", "Home", FormMethod.Post))
{
    @Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "UserLogin";
    settings.ColCount = 3;
    settings.AlignItemCaptionsInAllGroups = true;


    settings.Items.AddGroupItem(group =>
    {
        group.Caption = "User Information";
        group.GroupBoxDecoration = GroupBoxDecoration.Box;
        group.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;

        group.ColSpan = 1;
        group.ColCount = 1;

        group.Items.Add(item => item.Caption = " ")
        .SetNestedContent("<span>If you have no account, you can " + @Html.ActionLink("register", "Index", "Register") + ".</span>");
        group.Items.AddEmptyItem().Height = 20;

        group.Items
                .Add(m =>
                {
                    m.Caption = "User Name";
                })
                .SetNestedContent(() =>
                {
                    //ViewContext.Writer.Write("<table><tr><td style=\"padding-right:5px;\">");

                    Html.DevExpress().TextBoxFor(item => item.UserName, s =>
                    {
                        s.Width = 170;
                        s.ShowModelErrors = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithText;
                        s.Properties.ValidationSettings.Display = Display.Dynamic;
                        
                        s.Properties.ValidationSettings.ErrorText = "*";
                    }).Render();

                    //ViewContext.Writer.Write("</td></tr></table>");
                });
        group.Items.Add(item => item.Password, AuthorizationDataTextBoxSettingsMethod);
        //group.Items.Add(item => item.Caption = " ")
        //    .SetNestedContent(ViewBag.ErrMessage == null ? string.Empty : ViewBag.ErrMessage);
        group.Items.Add(item => item.Caption = " ")
            .SetNestedContent("<span style=\"color:red;\">" + (ViewBag.ErrMessage ?? string.Empty) + "</span>");
        group.Items.AddEmptyItem().Height = 20;

        group.Items.Add(item =>
        {
            item.Caption = " ";
            item.NestedExtension().Button(s =>
            {
                s.Name = "signIn";
                s.Text = "Sign In";
                s.UseSubmitBehavior = true;
                s.Width = Unit.Pixel(100);
            });
        });

    });

}).GetHtml()

}