@*@model DevExpressDemo.Models.ShapeModel

    @{
        ViewBag.Title = "Index";
    }

    <h2>Index</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>ShapeModel</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ShapeId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ShapeId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShapeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ShapeInfo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ShapeInfo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShapeInfo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

<link href="@Url.Content("~/Content/Devexpress.css")" rel="stylesheet" />
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery-1.12.4.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery-ui.js")"></script>
<script type="text/javascript">
    var shapeInit;

    $(function () {
        $.ajax({
            type: "GET",
            async: false,
            url: "/Shape/ShapeGetAll",
            success: function (data) {
                if (data.length > 0) {
                    shapeInit = data;
                    //console.log(JSON.parse(shapeInit[0].ShapeInfo));
                    //console.log(eval(shapeInit[0].ShapeInfo));
                }
            }
        });

        var str = '';
        if (shapeInit && shapeInit[0] != null) {
            $.each(eval(shapeInit[0].ShapeInfo), function (idx, obj) {
                str = str + '<div class="' + obj.className + '" style="' + obj.position + '" ></div>';
            });
            $("#draggable").append(str);
        }
    });

    $(function () {
        var makeDraggable = function (element) {
            element.draggable({
                revert: "invalid",
                appendTo: "#droppable",
                helper: "clone",
                containment: "#droppable",
                scroll: false,
                start: function () {
                    //console.log('start');
                },
                drag: function () {
                    //console.log('drag');
                },
                stop: function (event, ui) {

                    if (event.target.attributes.id == undefined) {
                        $(event.target).remove();
                        if (ui.offset.left > 1600 && ui.offset.top > 450) {
                            //console.log(event);
                            //console.log(parentElmment.children);
                            //console.log('delete' + event.clientX + '---' + event.clientY);
                            var parentElmment = document.getElementById("draggable");
                            for (var i = 0; i < parentElmment.children.length; i++) {
                                if (parentElmment.children[i].style.left.replace('px', '') > 1600 && parentElmment.children[i].style.top.replace('px', '') > 450) {
                                    //parentElmment.children[i].style.backgroundColor = "red";
                                    parentElmment.removeChild(parentElmment.children[i]);
                                }
                            }
                        }
                    }
                }
            });

            element.bind('dragstop', function (event, ui) {
                var newClone = $(ui.helper).clone();
                makeDraggable(newClone);
                $(this).after(newClone);
            });
        }

        makeDraggable($("#draggable .square"));
        makeDraggable($("#draggable .rectangle"));
        makeDraggable($("#draggable .circle"));

        $("#droppable").droppable({
            activeClass: "ui-state-default",
            hoverClass: "ui-state-hover"
        });

    });

    function save() {
        var shapes = [];
        var shapeSave;
        var elements = $("#draggable .ui-draggable-dragging");

        if (elements.length > 0) {
            for (var i = 0; i < elements.length; i++) {
                var shape = { className: '', position: '' };
                shape.className = elements[i].className;
                shape.position = elements[i].style.cssText;
                shapes.push(shape);
            }
        }

        if (shapes.length === 0) {
            return;
        }

        if (shapeInit && shapeInit[0] != null) {
            shapeSave = {
                ShapeId: shapeInit[0].ShapeId,
                ShapeInfo: window.JSON.stringify(shapes)
            }

            $.ajax({
                type: "POST",
                async: false,
                url: "/Shape/ShapeEdit",
                data: { "shape": shapeSave },
                success: function () {
                    console.log('Edit ok');
                }
            });
        }
        else {
            shapeSave = {
                ShapeInfo: window.JSON.stringify(shapes)
            }

            $.ajax({
                type: "POST",
                async: false,
                url: "/Shape/ShapeCreate",
                data: { "shape": shapeSave },
                success: function () {
                    console.log('Create ok');
                }
            });
        }
    }
</script>

<div id="draggable" class="draggable">
    <div id="square" class="square"></div>
    <div id="rectangle" class="rectangle"></div>
    <div id="circle" class="circle"></div>
</div>

<div id="droppable">
    <div id="dustbin">
        <img src="@Url.Content("~/Content/Images/dustbin.png")" alt="" />
    </div>
</div>
<div>
    <button onclick="save()">Submit</button>
</div>